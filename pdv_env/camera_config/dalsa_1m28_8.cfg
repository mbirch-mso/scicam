#
# CAMERA_MODEL 	"Dalsa 1M28"
#
# This is a generic camera configuration file, intended as a starting 
# place for creating a file for a new camera.  See the PCI DV User's
# guide for directions and configuration file parameter descriptions.
# Unmodified, this file should work for a single-channel Camera-Link
# camera that outputs data continuously (no trigger required) in
# 1024x1024, 10-bits per pixel with the LSB on VD0 or MSB0.
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Dalsa"
camera_model:                  "1M28"
camera_info:                   "1024x1024 (1-tap, freerun)"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#


width:                         1024
height:                        1024
depth:                         8
extdepth:                      8

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# mode control register bits (hex):
# 0-3: on/off state of mode control lines
# 4-7: which mode control line to send expose pulse for
#      triggered exposure or pulse-width triggering.
# this directive is usually set to 00 for free-running cameras,
# or 10 for triggered or pulse-width cameras/modes
#
MODE_CNTL_NORM:                00

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
#
CL_DATA_PATH_NORM:             07

# camera link config register bits (hex):
# 0: RGB (on for RGB color cameras only)
# 1: ignore data valid (on for most cameras though not all)
# 2: line scan
# 3: disable ROI (rarely set)
# 4: unused
# 5: data valid invert (rare)
# 6-7: undefined
#
CL_CFG_NORM:                   00

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip
#
hskip: 0
hactv: 1024
vskip: 0
vactv: 1024
