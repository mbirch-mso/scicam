#
# Dalsa PC-30-04k80
#
# 3-tap RGB 60 MHz pixel clock
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Dalsa"
camera_model:                  "PC-30-04k60, PC-30-04k80"
camera_info:                   "4096 x 1k lines, 24-bit RGB (clm 5), freerun"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         4096
height:                        1024
depth:                         24
extdepth:                      24

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #channels
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of channels (taps) minus 1
#
CL_DATA_PATH_NORM:             27

# 24 bit RGB treated as 1 tap in SW
#
htaps: 1

# camera link config register bits
# (arg is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (on for 24-bit RGB color cameras only)
#
# CAMERA_MODEL 	"Dalsa PC-30-04k80"
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Dalsa"
camera_model:                  "PC-30-04k80"
camera_info:                   "4096 x 1k lines, 24-bit RGB (clm 5), freerun"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         4096
height:                        1024
depth:                         24
extdepth:                      24

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #channels
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of channels (taps) minus 1
#
CL_DATA_PATH_NORM:             27


# camera link config register bits
# (arg is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (on for 24-bit RGB color cameras only)
# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   17


# FREERUN: sem 2 and mode control 0;  clm 5 is 8 bit RGB
# sot 60 sets 64 MHz clock, slow enough for PCI or PCIe4; also can set
# to 40; 80 is default
#
serial_init:	"sem 2:clm 5"
MODE_CNTL_NORM: 00



# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   17


# FREERUN: sem 2 and mode control 0;  clm 5 is 8 bit RGB
#
serial_init:	"sem 2:clm 5"
MODE_CNTL_NORM: 00



