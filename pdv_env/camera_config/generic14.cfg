#
# CAMERA_MODEL "Generic 1024 x 1024 14-bit camera continuous, AIA format"
#
# This is a generic camera configuration file, intended as a starting 
# place for creating a file for an AIA (LVDS or RS-422) format camera,
# connected to an EDT PCI DV, PCI DVa, PCI DVK, and PMC and Compact PCI
# variations. (For Camera Link boards and cameras, see generic*cl.cfg.)
#
# Unmodified, this file should work for a single-channel AIA format camera
# that outputs data continuously (no trigger or continuous external trigger),
# 1024x1024, 14 bits per pixel with the LSB on VD0 or MSB0.
#
# For detailed information on the configuration directives initialization 
# procedures, see the camera Configuration Guide and the PCI DV User's guide, 
# on your installation disk and in the documentation section of our web
# site (www.edt.com).
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:           "Generic"
camera_model:	 	"Sample 14-bit"
camera_info:	 	"1024x1024 (single ch., freerun)"

# rbtfile specifies the FPGA file to be loaded (almost always aiag.bit), for
# boards that have a separate UI FPGA.  This includes most non-cameralink
# boards and PCI DV FOX but not PCIe DV FOX. The directive will be ignored
# on boards that employ a single combined PCIe/UI FPGA.
#
rbtfile:		aiag.bit

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:			1024
height:			1024
depth:			14
extdepth:		14

# shift register bits (hex):
# 0-3: value to barrel-shift data bits if cable not wired straight-thru
# 4: do aia swap of data bits end for end
# 5-7: undefined
#
shift:			00

# mask register bits (hex)
# any bits NOT set will be set to 0 in image
# set to match depth of camera
#
mask:			3fff

# interlace method
# only for interleaved and some dual channel cameras
# determines how image is deinterleaved for display -- WORD_INTLV is only
# one of many available methods -- see *_INTLV in pdv_dependent.h and
# camera configuration guide for more
#
#method_interlace:	WORD_INTLV

# the following directives can be used to send us any serial commands
# necessary to put the camera to put it into the expected state.
# serial_init takes a colon-separated list of ASCII commands, and should
# be used for cameras that use an ASCII serial command set. serial_binit
# takes space-separated groups of hex bytes, for cameras that use binary
# serial instead of ASCII; each group gets send as a separate command with
# a serial_read of the response (thrown away) between each.  Examples of
# commands that should be sent include those that put the camera into the
# desired trigger mode (e.g. continuous, triggered, controlled), #bits and
# channels, etc. The idea is to set the camera mode to match how the rest
# of the config directives are setting up the FG board.
#
#serial_init: "CMD 1:CMD 2:CMD 3"
#serial_binit: "00 11 aa bb" or "001122 aabbccddeeff"

# serial_term defines the termination character(s) that will be sent after each
# serial command sent by the library subroutine pdv_serial_command, including
# those sent by serial_init (above).  If no serial_term is specified, the
# default, carriage return character (0d hex) will be sent. If some other
# sequence is needed, uncomment serial_term and insert the appropriate hex
# byte(s) separated by spaces.  serial_term only applies to EDT's ASCII-specific
# serial directives (e.g. serial_init) and library subroutines (pdv_serial_command),
# NOT binary ones (serial_binit, pdv_serial_binary_command).  To specify no
# serial terminator, call serial_term with an empty list <>
#
#serial_term: <0d>

# shutter timing method. For continuous or triggered cameras, this should be left
# commented out or set to AIA_SERIAL, For controlled, or 'pulse-width' mode, where
# the board's shutter timer controls the exposure, set to AIA_MCL. These are the
# most common methods but not all -- see the manual for more methods.  Also look
# at the shutter_speed_min/max and serial_exposure directives in the camera
# configuration guide.
# NEW FEATURE as of pdvlib version 3.3.3.4 -- if MODE_CNTL_NORM is NOT set
# explicitly, it will be set to appropriate default  based on value of method_
# camera_shutter_timing. Likewise shutter_speed_min/max will be set to min/max
# board shutter timing values (0 and 25500) IF one of the MCL modes is set. So
# for many conditions, method_camera_shutter_timing is all that is needed.
#
#method_camera_shutter_timing: AIA_SERIAL
#method_camera_shutter_timing: AIA_MCL
#method_camera_shutter_timing: AIA_TRIG

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip, vert and horiz
# if full frame is desired, you can leave these commented out or make them the
# same as the camera width/height. hskip/hactv can also be used to trim columns
# for cameras that output non-4-byte-aligned data to multiple of 4 bytes (in
# width) to ensure proper operation of windows applications that depend on
# 4-byte alignment, e.g. pdvshow
#
#hskip: 0
#hactv: 1024
#vskip: 0
#vactv: 1024

