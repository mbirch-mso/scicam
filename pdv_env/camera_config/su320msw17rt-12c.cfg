#
# EDT PCI DVa Configfile for Sensors Unlimited SU320MSW-1.7RT
#
# cables: 016-01991-00                  (80-pin, PCI DVa)
#         016-02265-00                  (68-pin, PCI DVK)
#         CUSTOM                        (80-pin, PCI DV) (needs RS422-232 serial conv.)
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                 "Sensors Unlimited"
camera_model:                 "SU320MSW-1.7RT"
camera_info:                  "12 bit 320x256"

# board xilinx firmware -- almost always aiag.bit
#
rbtfile:                      aiag.bit

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:  320 
height: 256 
depth:  12 
extdepth:  12 

# min/max shutter speed (/gain/blacklevel) are only for application
# use, so apps like pdvshow and dv30 know where to set the limits
# of the sliders, etc. These are not used at all by the driver or
# library.
#
shutter_speed_max:             7 
shutter_speed_min:             0 

# shift register bits (hex):
# 0-3: value to barrel-shift data bits if cable not wired straight-thru
# 4: do aia swap of data bits end for end
# 5-7: undefined
#
shift:                         00 

# mask register bits (hex):
# any bits NOT set will be set to 0 in image
# set to match depth of camera
#
mask:                          fff 

# mode control register bits (hex):
# 0-3: on/off state of mode control lines
# 4-7: which mode control line to send expose pulse for
#      triggered exposure or pulse-width triggering.
# this directive is usually set to 00 for free-running cameras,
# or 10 for triggered or pulse-width cameras/modes
#
MODE_CNTL_NORM:                00 
hskip:                         0 
vskip:                         0 
hactv:                         320 
vactv:                         256 

# set nonstandard baud rate
#
serial_baud:                   57600 

# with serial_mode flag you also need to jumper the board (or RCI unit)
# for RS-232, and make sure the RS422 traces are cut.
# IMPORTANT: RS232 serial is only implemented on PCI DVa and PCI RCI; for
# other EDT boards would need a special cable with the RS-232/422 converter
#
method_serial_mode:            RS232 

# strip off top/left black border (comment these out to see it all)
#
hskip:                         28 
vskip:                         16 
hactv:                         292 
vactv:                         230 
