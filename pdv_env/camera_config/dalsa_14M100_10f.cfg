#
# Dalsa 1.4M100
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Dalsa"
camera_model:                  "1.4M100"
camera_info:                   "1400x1024, 10-bit, freerun"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         1400
height:                        1024
depth:                         10
extdepth:                      10

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# mode control register bits (hex):
# 0-3: on/off state of mode control lines
# 4-7: which mode control line to send expose pulse for
#      triggered exposure or pulse-width triggering.
# this directive is usually set to 00 for free-running cameras,
# or 10 for triggered or pulse-width cameras/modes
#
MODE_CNTL_NORM:                00

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
# first bit is number of taps minus one
# second bit is number of bits minus one

CL_DATA_PATH_NORM:             19

# camera link config register bits
# (arg is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (set for RGB (except bayer). Applies to older/PCI, ignored on newer/PCIe)
# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL or vactv lines if bit 4 is set, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines if bit 2 is also set, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   00

# htaps/vtaps: if dual channel flag is ON (see CL_DATA_PATH_NORM) we need to
# set either htaps or vtaps to 2. Typcially it's htaps but depends on whether
# the two pixels that come out with each clock are both on the same line
# (uncomment htaps: 2) or on adjacent lines (uncomment vtaps: 2) 
#
#htaps:	2
#vtaps: 	2

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip
#
hskip: 0
hactv: 1400
vskip: 0
vactv: 1024
