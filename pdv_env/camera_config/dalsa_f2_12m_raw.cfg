#
# Dalsa Falcon 2 12M config as RAW 8-bit data. Requires EDT framegrabber
# flashed with full mode FPGA file -- see Firmware section of the users guide
#
# 10-bit 8-tap data comes in packed from the FG as 10-tap data:
# byte 0-7:  MSbits for each of 8 adjacent pixels
# byte 8:    LS 2 bits for each of pixels 0-3, ordered 3,2,1,0
# byte 9:    LS 2 bits for each of pixels 4-7, ordered 7,6,5,4
#
# This config reads them in RAW as 8-bit 10-tap data, hence the 5120 width which
# is 1.25 x the actual data width. Resulting images displayed as 8 bits per pixel
# will show up as 8 good pixels (columns) followed by apparent 2 pixels (coluns)
# of noise, repeating. This can be useful when the extra step of deinterleaving
# (in real time, via SW/CPU) into 2 bytes-per-pixel data is not needed or desired
# -- for that use the separate config dalsa_f2_12m.cfg.
#
camera_class:                  "Dalsa"
camera_model:                  "Falcon 2 12M"
camera_info:                   "10-bit 8-tap AS 8-bit 10-tap 5120x3072 raw, freerun"

# actual width/height (total pixels) as if this were an 8-bit camera.
# Depth and extdepth are 8; we read in as 10x8bit data.
#
width:                         5120
height:                        3072
depth:                         8
extdepth:                      8

# 10 bit 8 tap not supported in DVFOX or any other board with sep. FPGA, so skip it
#rbtfile: aiagcl.bit

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #taps
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of taps minus 1
#
CL_DATA_PATH_NORM:             79

# camera link config register bits
# (argument is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (set for RGB (except bayer). Applies to older/PCI, ignored on newer/PCIe)
# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL or vactv lines if bit 4 is set, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines if bit 2 is also set, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   02

# 10 taps x 8 bits
htaps:	10

# too fast (too short of an intrframe gap) for normal ops; so we don't do interrupts except
# for the first one, and instead just read in whenever FVAL is high. disadvantage is that
# the driver won't detect underruns/issue timeouts, leading to a persistently out-of-synch
# condition if underruns occur. the good news: now we have method_framesync (see next)
#
fv_once: 1

# new as of 5.3.9.6 and later, uncomment the next directive to check for synch via added IRIG2
# header data; lets us detect underruns and get a timeout even in continuous or fv_once mode 
#
#method_framesync: EMULATE_TIMEOUT
