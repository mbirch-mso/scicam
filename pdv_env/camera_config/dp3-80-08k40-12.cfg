#
# CAMERA_MODEL 	"Dalsa Piranha P3-80-08K40
# note: requires full mode board and firmware (pe8dvcamlk_fm.bit) or equivalent
#
# pixel clock 40 MHz
#
# For detailed information on the configuration directives initialization 
# procedures, see the camera Configuration Guide and the PCI DV User's guide, 
# on your installation disk and in the documentation section of our web
# site (www.edt.com).
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Dalsa"
camera_model:                  "P3-80-08K40"
camera_info:                   "8192 x 256 lines, 4-tap 12-bit, freerun"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         8192
height:                        256
depth:                         12
extdepth:                      12

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #channels
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of channels (taps) minus 1
#
CL_DATA_PATH_NORM:             7b

# camera link config register bits
# (argument is a 2-digit hex value, hexval shown in parens):
# Bit# Hex  Description
#  0  (01): RGB (on for RGB color cameras only)
#  1  (02): ignore data valid (on for most cameras though not all)
#  2  (04): generate an FVAL on every LVAL or vactv (if 10 is set), for linescan
#  3  (08): disable ROI (rarely set)
#  4  (10): generate an FVAL after every vactv (height) lines, for linescan
#  5  (20): data valid invert (rare)
#  6  (40): RGB swap -- swap red/blue
#  7  (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   16

# htaps/vtaps: if dual channel flag is ON (see CL_DATA_PATH_NORM) we need to
# set either htaps or vtaps to 2. Typcially it's htaps but depends on whether
# the two pixels that come out with each clock are both on the same line
# (uncomment htaps: 2) or on adjacent lines (uncomment vtaps: 2) 
#
htaps:	4
vtaps:  1

# serial setup specific to this camera / mode, see camera users guide
# for details:
#
# clm 16 (12 bit 4 tap)
#
serial_init: "clm 16"

# Mode Control register (hex)
# Hex value -- the left-most nibble determines which CC line is toggled for
# the EXPOSE pulse (if method_camera_shutter_timing is other than AIA_SERIAL).
# The right-most nibble determines which of the CC lines are held permanently
# high or low.  Typically this is set automatically by merthod_camera_timing
# (to 10 hex for triggered and MCL modes, 00 otherwise).  However if your
# camera needs it set otherwise, use this directive to do so.
#
# MODE_CNTL_NORM: 10

# Region of Interest start and area (decimal)
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip, vert and horiz
# if full frame is desired, you can leave these commented out or make them the
# same as the camera width/height. hskip/hactv can also be used to trim columns
# for cameras that output non-4-byte-aligned data to multiple of 4 bytes (in
# width) to ensure proper operation of windows applications that depend on
# 4-byte alignment, e.g. pdvshow
#
#hskip: 0
#hactv: 8192

