#
# CAMERA_MODEL 	"Redlake ES4020 12 bit single channel camera link"
#

# camera descriptive information
#
camera_class:                  "Redlake"
camera_model:                  "ES4020"
camera_info:                   "2048x2048 8-bit dual ch. mono, overlap trigger"

# actual size/depth
#
width:                         2048
height:                        2048
depth:                         8
extdepth:                      8

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# serial_init string is string to send to camera to put it into
# a known state. See camera mfg. documentation for specific serial
# commands for this camera. 
#
# serial_term is terminating char to be tacked on at the end of all
# serial commands (by serial_term (here) AND serial_cmd command line
# program, AND pdv_serial_command() library subroutine.
#
# serial_baud defaults to 9600 but can be set otherwise.
#
serial_init:    "404 7:406 1:408 1:410 0.10:449 2:425 8 4:248 1"
serial_baud:	9600
serial_term:	<0a>
serial_waitc:   0a

# serial exposure (application/library hints)
#
# in mode 7 (overlap) use triggerIntTime (410) to control exposure
# IMPORTANT: in this mode the redlake has 0.001 to 10 second granularity,
# and takes that as a floating point a argument, whereas the
# shutter_speed_min/max values only allow integer values. so we're partly
# brain-dead as far as using pdv_set_exposure and exposure time sliders in
# pdvshow, etc. since we can only do 1-10 seconds in this mode. Nevertheless,
# this gets us going in the right direction.
#
serial_exposure: "410"
shutter_speed_min: 1
shutter_speed_max: 10

# serial gain (application/library hints)
#
gain_min: 0
gain_max: 36
serial_gain: "202"

# serial offset (brightness) (application/library hints)
#
offset_min: 0
offset_max: 255
serial_offset: "207"

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
# (this camera's dual channel is internal to the camera only
# so leave bits 4-7 at 0.)
#
CL_DATA_PATH_NORM:	07

# camera link config register bits (hex):
# 0: RGB (on for RGB color cameras only)
# 1: ignore data valid (on for most cameras though not all)
# 2: line scan
# 3: disable ROI (rarely set)
# 4: unused
# 5: data valid invert (rare)
# 6-7: undefined
#
CL_CFG_NORM:		00

# mode control register bits (hex):
# 0-3: on/off state of mode control lines
# 4-7: which mode control line to send expose pulse for
#      triggered exposure or pulse-width triggering.
# this directive is usually set to 00 for free-running cameras,
# or 10 for triggered or pulse-width cameras/modes
#
MODE_CNTL_NORM:                10

# as of v4.1.3.6 and later, pclock_speed (camera pixel clock speed)
# can be put in configs and will be used by the library to bias the auto
# timeout to a more reasonable value; very handy for large format
# cameras to avoid really long timeout waits. also can be used for
# application hints (app can access it at it as dd_p->pclock_speed) 
#
pclock_speed: 80

# AIA_SERIAL timing even though MODE_CNTL_NORM 10 because it's
# asynchronous (overlapped) in this case
#
method_camera_shutter_timing: AIA_SER

# FMRATE_ENABLE tells it to send continuous pulses at frame_period intervals
# -- to get true overlap the app will need to call pdv_set_frame_period()
# every time exposure changes and have the frame period be just the right
# amount to overlap with the given exposure time
#
method_frame_timing: FMRATE_ENABLE
frame_period: 110000

# for FMRATE_ENABLE we still need to fake out hw to not send a trigger
# on every acquire; this is how it's done. possibly put make this auto
# with FMRATE_ENABLE in initcam in the future but this does work.
#
photo_trig:  1
