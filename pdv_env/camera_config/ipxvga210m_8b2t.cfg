#
# Imperx IPX-VGA210-M
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Imperx"
camera_model:                  "IPX-VGA210-M"
camera_info:                   "640x480x8, 2 tap, freerun, mono"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         640
height:                        480
depth:                         8
extdepth:                      8

# rbtfile is ignored for std camera link board but needed
# for DV FOX (fiberoptic) (v3.3.4.9 or later)
#
rbtfile: aiagcl.bit

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip, vert and horiz
# if full frame is desired, you can leave these commented out or make them the
# same as the camera width/height. hskip/hactv can also be used to trim columns
# for cameras that output non-4-byte-aligned data to multiple of 4 bytes (in
# width) to ensure proper operation of windows applications that depend on
# 4-byte alignment, e.g. pdvshow
#
#hskip: 0
#hactv: 640
#vskip: 0
#vactv: 480

# camera link data path register bits:
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
#
CL_DATA_PATH_NORM:             17

# camera link config register bits:
# 0: RGB (on for RGB color cameras only)
# 1: ignore data valid (on for most cameras though not all)
# 2: line scan
# 3: disable ROI (rarely set)
# 4: unused
# 5: data valid invert (rare)
# 6-7: undefined
#
CL_CFG_NORM:                   02

# htaps/vtaps: if dual channel flag is ON (see CL_DATA_PATH_NORM) we need to set
# either htaps or vtaps to 2. Which one depends on whether the two pixels
# that come out with each clock are both on the same line (uncomment
# htaps: 2) or on adjacent lines (uncomment vtaps: 2) 
#
htaps:	2
#vtaps: 2

# interlace method
# only for interleaved and some dual channel cameras
# determines how image is deinterleaved for display -- WORD_INTLV is only
# one of many available methods -- see *_INTLV in pdv_dependent.h and
# camera configuration guide for more
#
method_interlace:	INVERT_RIGHT_INTLV

