#
# CAMERA_MODEL 	"Generic 16"
#
# This is a generic camera configuration file, intended as a starting 
# place for creating a file for a new camera.  See the PCI DV User's
# guide for general information on configuration files, and the Camera
# Configuration Guide for detailed descriptions of the config file
# directives and arguments. 
# Unmodified, this file should work for a single-channel Camera-Link
# camera that outputs data continuously (no trigger required) in
# 1024x1024, 16-bits per pixel with the LSB on VD0 or MSB0.
#

# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Basler"
camera_model:                  "A504K"
camera_info:                   "1280x1024 10-tap 8-bit, ext. exsync/programmable"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         1280
height:                        1024
depth:                         8
extdepth:                      8

# rbtfile is ignored for std camera link board but needed for DV FOX (fiberoptic)
# since PCI DV FOX DVFOX doesn't support full mode it's N/A for now but here as
# a placeholder for future PCIe8 DV FOX
#
rbtfile: pe8dvfox_fm.bit

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #channels
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of channels (taps) minus 1
#
CL_DATA_PATH_NORM:             97

# camera link config register bits
# (argument is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (on for RGB color cameras only)
# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   02

# htaps/vtaps
#
htaps:	10
vtaps: 1

# a0 bode for external trigger passthrough for EXSYNC signal
#
MODE_CNTL_NORM: a0

# initalize the camera using basler serial framing format 
# (prefix, checksum and postfix added by the library)
# colon-separated
#
# some basler 504k specific commands:
#   test pattern OFF: a10100, or ON: a10101
#   exsync PROG:      a00105, or LEVEL: a00104, or EDGE: a00106
#   AOI horiz. 1280:  ab020500
#
serial_init_baslerf: "a10100:a00105:ab020500"

# too fast (too short of an intrframe gap) for normal ops; so we don't do interrupts except
# for the first one, and instead just read in whenever FVAL is high. disadvantage is that
# the driver won't detect underruns/issue timeouts, leading to a persistently out-of-synch
# condition if underruns occur. the good news: now we have method_framesync (see next)
#
fv_once:	1

# new as of 5.3.9.6 and later, uncomment the next directive to check for synch via IRIG2
# header data; lets us detect underruns and get a timeout even in continuous or fv_once mode 
#
#method_framesync: EMULATE_TIMEOUT
