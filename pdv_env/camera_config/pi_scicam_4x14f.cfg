#
# CAMERA_MODEL 	"Princeton Infrared 1280SciCam (4-tap, 14-bit)"
# camera description, for camera selection GUI and apps
# camera_class should be the manufacturer's name
#
camera_class:                  "Princeton Infrared "
camera_model:                  "1280SciCam"
camera_info:                   "1280x1024 (4-tap, 14-bit)"

# actual width/height (total pixels) and depth of data from camera
# to only grab high 8-bits, set depth to 8 but leave extdepth set
# to actual depth, and adjust shift and mask accordingly
#
width:                         1280
height:                        1024
depth:                         14
extdepth:                      14


# mode control register bits (hex):
# 0-3: on/off state of mode control lines
# 4-7: which mode control line to send expose pulse for
#      triggered exposure or pulse-width triggering.
# this directive is usually set to 00 for free-running cameras,
# or 10 for triggered or pulse-width cameras/modes
#
MODE_CNTL_NORM:                00

# camera link data path register bits (argument is a 2-digit hex value):
# sets the expected input data size and #taps
# bits 0-3: number of bits per pixel minus 1
# bits 4-7: number of taps minus 1
#
CL_DATA_PATH_NORM:             3d	

# camera link config register bits
# (argument is a 2-digit hex value, hexval shown in parens):
# 0 (01): RGB (set for RGB (except bayer). Applies to older/PCI, ignored on newer/PCIe)
# 1 (02): ignore data valid (on for most cameras though not all)
# 2 (04): generate an FVAL on every LVAL or vactv lines if bit 4 is set, for line scan cameras
# 3 (08): disable ROI (rarely set)
# 4 (10): generate an FVAL after every vactv lines if bit 2 is also set, for line scan cameras
# 5 (20): data valid invert (rare)
# 6 (40): RGB swap -- swap red/blue
# 7 (80): enable roi pad: if ROI > img output, will pad missing bytes
#
CL_CFG_NORM:                   80

# htaps/vtaps: if multiple taps, set either htaps or vtaps to match the number
# of taps and whether they represent horizontal or vertical. Most common it's
# htaps (that is, pixels in parallel taps are from pixels next to each other on
# the same line) For example with a 2-tap 8-bit camera (CL_DATA_PATH_NORM: 17)
# where the two taps are from adjacent pixels on the same line, you would uncomment
# htaps and leave it at 2.
#
htaps:   	4
#vtaps: 	2

# the following directives can be used to send us any serial commands
# necessary to put the camera to put it into the expected state.
# serial_init takes a colon-separated list of ASCII commands, and should
# be used for cameras that use an ASCII serial command set. serial_binit
# takes space-separated groups of hex bytes, for cameras that use binary
# serial instead of ASCII; each group gets send as a separate command with
# a serial_read of the response (thrown away) between each.  Examples of
# commands that should be sent include those that put the camera into the
# desired trigger mode (e.g. continuous, triggered, controlled), #bits and
# taps, etc. The idea is to set the camera mode to match how the rest
# of the config directives are setting up the FG board.
#
#serial_init: "CMD 1:CMD 2:CMD 3"
#serial_binit: "00 11 aa bb" or "001122 aabbccddeeff"

serial_baud: 115200

#serial_init: "CMD 1"

# Region of Interest start and area (decimal)
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip, vert and horiz
# if full frame is desired, you can leave these commented out or make them the
# same as the camera width/height. hskip/hactv can also be used to trim columns
# for cameras that output non-4-byte-aligned data to multiple of 4 bytes (in
# width) to ensure proper operation of windows applications that depend on
# 4-byte alignment, e.g. pdvshow
#
#hskip: 0
#hactv: 240
#vskip: 0
#vactv: 240

# CL_CFG2_NORM = 40
# This directive instructs the board to auto-rearm when it detects
# FVAL has gone low. This removes the latency of the driver having
# to rearm the board at the end of DMA. Recommended to use with 
# high frame rate cameras with small frames (short vertical blanking
# intervals.
#CL_CFG2_NORM:     40

# method_framesync which can append a 32-byte footer to each frame
# which is used by software to detect out of sync frames. If an
# out of sync condition is detected in the footer, the software 
# will stop and restart acquisition in an attempt to resync.
#method_framesync: EMULATE_TIMEOUT

